name: GitLab Upgrade Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  upgrade:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH Key and Host
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.GITLAB_HOST }} >> ~/.ssh/known_hosts

    - name: Verify SSH Connection
      run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no azureuser@${{ secrets.GITLAB_HOST }} "echo SSH connection established."

    - name: Copy Version Check Script to Server
      run: |
        scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no version_check.sh azureuser@${{ secrets.GITLAB_HOST }}:/tmp/version_check.sh
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no azureuser@${{ secrets.GITLAB_HOST }} "chmod +x /tmp/version_check.sh"

    - name: Validate Upgrade Path
      run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no azureuser@${{ secrets.GITLAB_HOST }} "sudo /tmp/version_check.sh 17.0"

    - name: Upgrade Python on Server
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no azureuser@${{ secrets.GITLAB_HOST }} "
          sudo yum install -y gcc libffi-devel bzip2 bzip2-devel zlib-devel openssl-devel xz-devel &&
          wget https://www.python.org/ftp/python/3.9.9/Python-3.9.9.tgz &&
          tar xvf Python-3.9.9.tgz &&
          cd Python-3.9.9 &&
          ./configure --enable-optimizations &&
          sudo make altinstall &&
          sudo alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.9 1
        "

    - name: Run Ansible Playbook to Upgrade to Target Version
      run: |
        ansible-playbook -i inventory gitlab_upgrade.yml -e "ansible_python_interpreter=/usr/bin/python3 target_version=17.0"

    - name: Verify GitLab Version
      run: ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no azureuser@${{ secrets.GITLAB_HOST }} "sudo /opt/gitlab/bin/gitlab-rake gitlab:env:info | grep 'Version:'"
